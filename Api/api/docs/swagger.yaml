basePath: /v1
definitions:
  models.Login:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      access_token:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Get My Profile
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BearerAuth: []
      summary: Login
      tags:
      - Reg
  /reg:
    post:
      consumes:
      - application/json
      description: This API for creating a new user
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create new user
      tags:
      - Reg
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BearerAuth: []
      summary: GetUser
      tags:
      - Reg
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
